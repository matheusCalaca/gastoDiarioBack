plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'br.com.matheuscalaca.gastosDiarios.api'
version = '0.0.1-SNAPSHOT'

// Configuração para obter a versão do projeto
def versionNumber = version


java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}

dependencies {
	implementation project(':gastoDiario-core') // Adicione a dependência do módulo core
	implementation project(':gastoDiario-database')
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//security

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'com.mysql:mysql-connector-j'
}


sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}

compileJava {
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

// Configuração para obter a versão do projeto para nomear o arquivo JAR
tasks.withType(Jar) {
	archiveFileName = "gastoDiario-api-${versionNumber}.jar"
}

// Tarefa personalizada para gerar o conteúdo do Procfile
tasks.register('generateProcfile', Copy) {
	def procfileContent = "web: java -jar build/libs/gastoDiario-api-${versionNumber}.jar"
	from(procfileContent)
	into(projectDir)
	file 'Procfile'
}


//// Defina o diretório de destino para o JAR copiado
//def destinationDir = file("${rootDir}/build/libs")
//
//// Tarefa para copiar o JAR para o diretório de destino
//tasks.register('copyJar', Copy) {
//	from jar // JAR gerado pelo projeto
//	into destinationDir
//}
//
//// Adicione a dependência para a tarefa 'copyJar' na tarefa 'assemble'
//assemble.dependsOn(copyJar)